{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = [];\nexport const counterSlice = createSlice({\n  name: \"kanban\",\n  initialState,\n  reducers: {\n    foo: kanbans => {\n      console.log(kanbans);\n    }\n  }\n});\n\n/* 임시로 reducers 함수에 foo 작성. 여기에 전역 상태 다루는 함수 작성하시면 됩니다. */\n\nexport const {\n  foo\n} = counterSlice.actions;\nexport default counterSlice.reducer;\nvar IssueState;\n(function (IssueState) {\n  IssueState[\"todo\"] = \"todo\";\n  IssueState[\"doing\"] = \"doing\";\n  IssueState[\"done\"] = \"done\";\n})(IssueState || (IssueState = {}));","map":{"version":3,"names":["createSlice","initialState","counterSlice","name","reducers","foo","kanbans","console","log","actions","reducer","IssueState"],"sources":["/Users/janghyun/Documents/wanted/pre-onboarding-8th-2-10/pre-onboarding-8th-1-2/src/app/kanbanSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState: Array<InterfaceIssue> = [];\n\nexport const counterSlice = createSlice({\n  name: \"kanban\",\n  initialState,\n  reducers: {\n    foo: (kanbans) => {\n      console.log(kanbans);\n    },\n  },\n});\n\n/* 임시로 reducers 함수에 foo 작성. 여기에 전역 상태 다루는 함수 작성하시면 됩니다. */\n\nexport const { foo } = counterSlice.actions;\n\nexport default counterSlice.reducer;\n\ninterface InterfaceIssue {\n  id: number;\n  content: string;\n  due: string;\n  state: IssueState;\n  manager: string;\n}\n\nenum IssueState {\n  todo = \"todo\",\n  doing = \"doing\",\n  done = \"done\",\n}\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAmC,GAAG,EAAE;AAE9C,OAAO,MAAMC,YAAY,GAAGF,WAAW,CAAC;EACtCG,IAAI,EAAE,QAAQ;EACdF,YAAY;EACZG,QAAQ,EAAE;IACRC,GAAG,EAAGC,OAAO,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACtB;EACF;AACF,CAAC,CAAC;;AAEF;;AAEA,OAAO,MAAM;EAAED;AAAI,CAAC,GAAGH,YAAY,CAACO,OAAO;AAE3C,eAAeP,YAAY,CAACQ,OAAO;AAAC,IAU/BC,UAAU;AAAA,WAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;AAAA,GAAVA,UAAU,KAAVA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}